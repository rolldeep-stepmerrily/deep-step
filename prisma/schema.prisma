generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  password    String
  email       String    @unique
  name        String
  phoneNumber String    @unique
  role        Role      @default(USER)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  deletedAt   DateTime?

  term          Term?
  profile       Profile?
  chatRoomUsers ChatRoomUser[]
  messages      Message[]
}

model Term {
  id              Int       @id
  isService       Boolean   @default(false)
  isPrivacy       Boolean   @default(false)
  isPrivacyOption Boolean   @default(false)
  isAge           Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime? @updatedAt
  deletedAt       DateTime?

  user User @relation(fields: [id], references: [id])
}

model Profile {
  id        Int       @id
  nickname  String    @unique
  avatar    String?
  status    String?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?

  user User @relation(fields: [id], references: [id])
}

model ChatRoom {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  deletedAt   DateTime?

  messages      Message[]
  chatRoomUsers ChatRoomUser[]
}

model ChatRoomUser {
  id         Int       @id @default(autoincrement())
  chatRoomId Int
  userId     Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
  deletedAt  DateTime?

  user     User     @relation(fields: [userId], references: [id])
  chatRoom ChatRoom @relation(fields: [chatRoomId], references: [id])

  @@unique([userId, chatRoomId])
}

model Message {
  id         String    @id @default(uuid())
  chatRoomId Int
  userId     Int
  content    String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
  deletedAt  DateTime?

  user     User     @relation(fields: [userId], references: [id])
  chatRoom ChatRoom @relation(fields: [chatRoomId], references: [id])
}
